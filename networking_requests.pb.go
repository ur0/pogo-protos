// Code generated by protoc-gen-go.
// source: networking_requests.proto
// DO NOT EDIT!

/*
Package pogo_protos is a generated protocol buffer package.

It is generated from these files:
	networking_requests.proto
	map_fort.proto
	data_battle.proto
	enums.proto
	inventory_item.proto
	data.proto
	networking_requests_messages.proto
	settings.proto
	networking_envelopes.proto
	inventory.proto
	networking_responses.proto
	settings_master.proto
	settings_master_item.proto
	map_pokemon.proto
	data_gym.proto
	data_logs.proto
	settings_master_pokemon.proto
	maps.proto
	data_player.proto
	data_capture.proto

It has these top-level messages:
	Request
	FortData
	FortLureInfo
	FortModifier
	FortSummary
	BattleLog
	BattlePokemonInfo
	BattleParticipant
	BattleResults
	BattleAction
	ItemData
	ItemAward
	AssetDigestEntry
	PokemonData
	PokedexEntry
	DownloadUrlEntry
	PlayerBadge
	PlayerData
	PlayerUpdateMessage
	DiskEncounterMessage
	GetMapObjectsMessage
	GetHatchedEggsMessage
	GetPlayerMessage
	StartGymBattleMessage
	UseItemEggIncubatorMessage
	CollectDailyDefenderBonusMessage
	NicknamePokemonMessage
	DownloadRemoteConfigVersionMessage
	CheckCodenameAvailableMessage
	RecycleInventoryItemMessage
	UseItemPotionMessage
	GetGymDetailsMessage
	GetSuggestedCodenamesMessage
	EvolvePokemonMessage
	UseItemReviveMessage
	EncounterTutorialCompleteMessage
	MarkTutorialCompleteMessage
	UseItemXpBoostMessage
	AttackGymMessage
	FortRecallPokemonMessage
	LevelUpRewardsMessage
	EncounterMessage
	FortSearchMessage
	FortDeployPokemonMessage
	SfidaActionLogMessage
	DownloadItemTemplatesMessage
	EchoMessage
	UpgradePokemonMessage
	SetContactSettingsMessage
	ReleasePokemonMessage
	FortDetailsMessage
	CollectDailyBonusMessage
	GetAssetDigestMessage
	AddFortModifierMessage
	IncenseEncounterMessage
	GetDownloadUrlsMessage
	CheckAwardedBadgesMessage
	SetFavoritePokemonMessage
	GetInventoryMessage
	SetPlayerTeamMessage
	UseItemGymMessage
	UseIncenseMessage
	DownloadSettingsMessage
	SetAvatarMessage
	UseItemCaptureMessage
	CatchPokemonMessage
	ClaimCodenameMessage
	EquipBadgeMessage
	GetIncensePokemonMessage
	GetPlayerProfileMessage
	LevelSettings
	FortSettings
	MapSettings
	DownloadSettingsAction
	GlobalSettings
	InventorySettings
	Unknown6
	ResponseEnvelope
	RequestEnvelope
	Unknown6Response
	AuthTicket
	InventoryDelta
	InventoryItemData
	EggIncubator
	AppliedItem
	EggIncubators
	AppliedItems
	InventoryUpgrade
	InventoryItem
	InventoryUpgrades
	Candy
	GetDownloadUrlsResponse
	DownloadItemTemplatesResponse
	CheckCodenameAvailableResponse
	SetPlayerTeamResponse
	UseItemReviveResponse
	LevelUpRewardsResponse
	CheckAwardedBadgesResponse
	DownloadRemoteConfigVersionResponse
	UseItemXpBoostResponse
	DownloadSettingsResponse
	AddFortModifierResponse
	UseItemGymResponse
	SetFavoritePokemonResponse
	EncounterTutorialCompleteResponse
	ClaimCodenameResponse
	UseItemEggIncubatorResponse
	GetAssetDigestResponse
	GetSuggestedCodenamesResponse
	DiskEncounterResponse
	GetIncensePokemonResponse
	UpgradePokemonResponse
	GetGymDetailsResponse
	UseItemPotionResponse
	SfidaActionLogResponse
	CollectDailyDefenderBonusResponse
	PlayerUpdateResponse
	SetAvatarResponse
	UseIncenseResponse
	UseItemCaptureResponse
	FortRecallPokemonResponse
	CollectDailyBonusResponse
	FortDetailsResponse
	MarkTutorialCompleteResponse
	EchoResponse
	EvolvePokemonResponse
	FortDeployPokemonResponse
	CatchPokemonResponse
	NicknamePokemonResponse
	FortSearchResponse
	GetInventoryResponse
	RecycleInventoryItemResponse
	SetContactSettingsResponse
	EquipBadgeResponse
	GetHatchedEggsResponse
	StartGymBattleResponse
	GetMapObjectsResponse
	EncounterResponse
	IncenseEncounterResponse
	GetPlayerProfileResponse
	GetPlayerResponse
	ReleasePokemonResponse
	AttackGymResponse
	GymLevelSettings
	GymBattleSettings
	TypeEffectiveSettings
	IapItemDisplay
	IapSettings
	PlayerLevelSettings
	CameraSettings
	PokemonUpgradeSettings
	BadgeSettings
	EncounterSettings
	PokemonSettings
	MoveSettings
	EquippedBadgeSettings
	ItemSettings
	MoveSequenceSettings
	ExperienceBoostAttributes
	PokeballAttributes
	PotionAttributes
	BattleAttributes
	FoodAttributes
	IncenseAttributes
	InventoryUpgradeAttributes
	FortModifierAttributes
	EggIncubatorAttributes
	ReviveAttributes
	NearbyPokemon
	WildPokemon
	MapPokemon
	GymMembership
	GymState
	FortSearchLogEntry
	CatchPokemonLogEntry
	ActionLogEntry
	StatsAttributes
	CameraAttributes
	EncounterAttributes
	MapCell
	SpawnPoint
	DailyBonus
	ContactSettings
	EquippedBadge
	Currency
	PlayerPublicProfile
	PlayerStats
	PlayerCamera
	PlayerAvatar
	PlayerCurrency
	CaptureAward
	CaptureProbability
*/
package pogo_protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RequestType int32

const (
	RequestType_METHOD_UNSET                   RequestType = 0
	RequestType_PLAYER_UPDATE                  RequestType = 1
	RequestType_GET_PLAYER                     RequestType = 2
	RequestType_GET_INVENTORY                  RequestType = 4
	RequestType_DOWNLOAD_SETTINGS              RequestType = 5
	RequestType_DOWNLOAD_ITEM_TEMPLATES        RequestType = 6
	RequestType_DOWNLOAD_REMOTE_CONFIG_VERSION RequestType = 7
	RequestType_FORT_SEARCH                    RequestType = 101
	RequestType_ENCOUNTER                      RequestType = 102
	RequestType_CATCH_POKEMON                  RequestType = 103
	RequestType_FORT_DETAILS                   RequestType = 104
	RequestType_ITEM_USE                       RequestType = 105
	RequestType_GET_MAP_OBJECTS                RequestType = 106
	RequestType_FORT_DEPLOY_POKEMON            RequestType = 110
	RequestType_FORT_RECALL_POKEMON            RequestType = 111
	RequestType_RELEASE_POKEMON                RequestType = 112
	RequestType_USE_ITEM_POTION                RequestType = 113
	RequestType_USE_ITEM_CAPTURE               RequestType = 114
	RequestType_USE_ITEM_FLEE                  RequestType = 115
	RequestType_USE_ITEM_REVIVE                RequestType = 116
	RequestType_TRADE_SEARCH                   RequestType = 117
	RequestType_TRADE_OFFER                    RequestType = 118
	RequestType_TRADE_RESPONSE                 RequestType = 119
	RequestType_TRADE_RESULT                   RequestType = 120
	RequestType_GET_PLAYER_PROFILE             RequestType = 121
	RequestType_GET_ITEM_PACK                  RequestType = 122
	RequestType_BUY_ITEM_PACK                  RequestType = 123
	RequestType_BUY_GEM_PACK                   RequestType = 124
	RequestType_EVOLVE_POKEMON                 RequestType = 125
	RequestType_GET_HATCHED_EGGS               RequestType = 126
	RequestType_ENCOUNTER_TUTORIAL_COMPLETE    RequestType = 127
	RequestType_LEVEL_UP_REWARDS               RequestType = 128
	RequestType_CHECK_AWARDED_BADGES           RequestType = 129
	RequestType_USE_ITEM_GYM                   RequestType = 133
	RequestType_GET_GYM_DETAILS                RequestType = 134
	RequestType_START_GYM_BATTLE               RequestType = 135
	RequestType_ATTACK_GYM                     RequestType = 136
	RequestType_RECYCLE_INVENTORY_ITEM         RequestType = 137
	RequestType_COLLECT_DAILY_BONUS            RequestType = 138
	RequestType_USE_ITEM_XP_BOOST              RequestType = 139
	RequestType_USE_ITEM_EGG_INCUBATOR         RequestType = 140
	RequestType_USE_INCENSE                    RequestType = 141
	RequestType_GET_INCENSE_POKEMON            RequestType = 142
	RequestType_INCENSE_ENCOUNTER              RequestType = 143
	RequestType_ADD_FORT_MODIFIER              RequestType = 144
	RequestType_DISK_ENCOUNTER                 RequestType = 145
	RequestType_COLLECT_DAILY_DEFENDER_BONUS   RequestType = 146
	RequestType_UPGRADE_POKEMON                RequestType = 147
	RequestType_SET_FAVORITE_POKEMON           RequestType = 148
	RequestType_NICKNAME_POKEMON               RequestType = 149
	RequestType_EQUIP_BADGE                    RequestType = 150
	RequestType_SET_CONTACT_SETTINGS           RequestType = 151
	RequestType_GET_ASSET_DIGEST               RequestType = 300
	RequestType_GET_DOWNLOAD_URLS              RequestType = 301
	RequestType_GET_SUGGESTED_CODENAMES        RequestType = 401
	RequestType_CHECK_CODENAME_AVAILABLE       RequestType = 402
	RequestType_CLAIM_CODENAME                 RequestType = 403
	RequestType_SET_AVATAR                     RequestType = 404
	RequestType_SET_PLAYER_TEAM                RequestType = 405
	RequestType_MARK_TUTORIAL_COMPLETE         RequestType = 406
	RequestType_LOAD_SPAWN_POINTS              RequestType = 500
	RequestType_ECHO                           RequestType = 666
	RequestType_DEBUG_UPDATE_INVENTORY         RequestType = 700
	RequestType_DEBUG_DELETE_PLAYER            RequestType = 701
	RequestType_SFIDA_REGISTRATION             RequestType = 800
	RequestType_SFIDA_ACTION_LOG               RequestType = 801
	RequestType_SFIDA_CERTIFICATION            RequestType = 802
	RequestType_SFIDA_UPDATE                   RequestType = 803
	RequestType_SFIDA_ACTION                   RequestType = 804
	RequestType_SFIDA_DOWSER                   RequestType = 805
	RequestType_SFIDA_CAPTURE                  RequestType = 806
)

var RequestType_name = map[int32]string{
	0:   "METHOD_UNSET",
	1:   "PLAYER_UPDATE",
	2:   "GET_PLAYER",
	4:   "GET_INVENTORY",
	5:   "DOWNLOAD_SETTINGS",
	6:   "DOWNLOAD_ITEM_TEMPLATES",
	7:   "DOWNLOAD_REMOTE_CONFIG_VERSION",
	101: "FORT_SEARCH",
	102: "ENCOUNTER",
	103: "CATCH_POKEMON",
	104: "FORT_DETAILS",
	105: "ITEM_USE",
	106: "GET_MAP_OBJECTS",
	110: "FORT_DEPLOY_POKEMON",
	111: "FORT_RECALL_POKEMON",
	112: "RELEASE_POKEMON",
	113: "USE_ITEM_POTION",
	114: "USE_ITEM_CAPTURE",
	115: "USE_ITEM_FLEE",
	116: "USE_ITEM_REVIVE",
	117: "TRADE_SEARCH",
	118: "TRADE_OFFER",
	119: "TRADE_RESPONSE",
	120: "TRADE_RESULT",
	121: "GET_PLAYER_PROFILE",
	122: "GET_ITEM_PACK",
	123: "BUY_ITEM_PACK",
	124: "BUY_GEM_PACK",
	125: "EVOLVE_POKEMON",
	126: "GET_HATCHED_EGGS",
	127: "ENCOUNTER_TUTORIAL_COMPLETE",
	128: "LEVEL_UP_REWARDS",
	129: "CHECK_AWARDED_BADGES",
	133: "USE_ITEM_GYM",
	134: "GET_GYM_DETAILS",
	135: "START_GYM_BATTLE",
	136: "ATTACK_GYM",
	137: "RECYCLE_INVENTORY_ITEM",
	138: "COLLECT_DAILY_BONUS",
	139: "USE_ITEM_XP_BOOST",
	140: "USE_ITEM_EGG_INCUBATOR",
	141: "USE_INCENSE",
	142: "GET_INCENSE_POKEMON",
	143: "INCENSE_ENCOUNTER",
	144: "ADD_FORT_MODIFIER",
	145: "DISK_ENCOUNTER",
	146: "COLLECT_DAILY_DEFENDER_BONUS",
	147: "UPGRADE_POKEMON",
	148: "SET_FAVORITE_POKEMON",
	149: "NICKNAME_POKEMON",
	150: "EQUIP_BADGE",
	151: "SET_CONTACT_SETTINGS",
	300: "GET_ASSET_DIGEST",
	301: "GET_DOWNLOAD_URLS",
	401: "GET_SUGGESTED_CODENAMES",
	402: "CHECK_CODENAME_AVAILABLE",
	403: "CLAIM_CODENAME",
	404: "SET_AVATAR",
	405: "SET_PLAYER_TEAM",
	406: "MARK_TUTORIAL_COMPLETE",
	500: "LOAD_SPAWN_POINTS",
	666: "ECHO",
	700: "DEBUG_UPDATE_INVENTORY",
	701: "DEBUG_DELETE_PLAYER",
	800: "SFIDA_REGISTRATION",
	801: "SFIDA_ACTION_LOG",
	802: "SFIDA_CERTIFICATION",
	803: "SFIDA_UPDATE",
	804: "SFIDA_ACTION",
	805: "SFIDA_DOWSER",
	806: "SFIDA_CAPTURE",
}
var RequestType_value = map[string]int32{
	"METHOD_UNSET":                   0,
	"PLAYER_UPDATE":                  1,
	"GET_PLAYER":                     2,
	"GET_INVENTORY":                  4,
	"DOWNLOAD_SETTINGS":              5,
	"DOWNLOAD_ITEM_TEMPLATES":        6,
	"DOWNLOAD_REMOTE_CONFIG_VERSION": 7,
	"FORT_SEARCH":                    101,
	"ENCOUNTER":                      102,
	"CATCH_POKEMON":                  103,
	"FORT_DETAILS":                   104,
	"ITEM_USE":                       105,
	"GET_MAP_OBJECTS":                106,
	"FORT_DEPLOY_POKEMON":            110,
	"FORT_RECALL_POKEMON":            111,
	"RELEASE_POKEMON":                112,
	"USE_ITEM_POTION":                113,
	"USE_ITEM_CAPTURE":               114,
	"USE_ITEM_FLEE":                  115,
	"USE_ITEM_REVIVE":                116,
	"TRADE_SEARCH":                   117,
	"TRADE_OFFER":                    118,
	"TRADE_RESPONSE":                 119,
	"TRADE_RESULT":                   120,
	"GET_PLAYER_PROFILE":             121,
	"GET_ITEM_PACK":                  122,
	"BUY_ITEM_PACK":                  123,
	"BUY_GEM_PACK":                   124,
	"EVOLVE_POKEMON":                 125,
	"GET_HATCHED_EGGS":               126,
	"ENCOUNTER_TUTORIAL_COMPLETE":    127,
	"LEVEL_UP_REWARDS":               128,
	"CHECK_AWARDED_BADGES":           129,
	"USE_ITEM_GYM":                   133,
	"GET_GYM_DETAILS":                134,
	"START_GYM_BATTLE":               135,
	"ATTACK_GYM":                     136,
	"RECYCLE_INVENTORY_ITEM":         137,
	"COLLECT_DAILY_BONUS":            138,
	"USE_ITEM_XP_BOOST":              139,
	"USE_ITEM_EGG_INCUBATOR":         140,
	"USE_INCENSE":                    141,
	"GET_INCENSE_POKEMON":            142,
	"INCENSE_ENCOUNTER":              143,
	"ADD_FORT_MODIFIER":              144,
	"DISK_ENCOUNTER":                 145,
	"COLLECT_DAILY_DEFENDER_BONUS":   146,
	"UPGRADE_POKEMON":                147,
	"SET_FAVORITE_POKEMON":           148,
	"NICKNAME_POKEMON":               149,
	"EQUIP_BADGE":                    150,
	"SET_CONTACT_SETTINGS":           151,
	"GET_ASSET_DIGEST":               300,
	"GET_DOWNLOAD_URLS":              301,
	"GET_SUGGESTED_CODENAMES":        401,
	"CHECK_CODENAME_AVAILABLE":       402,
	"CLAIM_CODENAME":                 403,
	"SET_AVATAR":                     404,
	"SET_PLAYER_TEAM":                405,
	"MARK_TUTORIAL_COMPLETE":         406,
	"LOAD_SPAWN_POINTS":              500,
	"ECHO":                           666,
	"DEBUG_UPDATE_INVENTORY": 700,
	"DEBUG_DELETE_PLAYER":    701,
	"SFIDA_REGISTRATION":     800,
	"SFIDA_ACTION_LOG":       801,
	"SFIDA_CERTIFICATION":    802,
	"SFIDA_UPDATE":           803,
	"SFIDA_ACTION":           804,
	"SFIDA_DOWSER":           805,
	"SFIDA_CAPTURE":          806,
}

func (x RequestType) String() string {
	return proto.EnumName(RequestType_name, int32(x))
}
func (RequestType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Request struct {
	RequestType    RequestType `protobuf:"varint,1,opt,name=request_type,json=requestType,enum=POGOProtos.Networking.Requests.RequestType" json:"request_type,omitempty"`
	RequestMessage []byte      `protobuf:"bytes,2,opt,name=request_message,json=requestMessage,proto3" json:"request_message,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func init() {
	proto.RegisterType((*Request)(nil), "POGOProtos.Networking.Requests.Request")
	proto.RegisterEnum("POGOProtos.Networking.Requests.RequestType", RequestType_name, RequestType_value)
}

func init() { proto.RegisterFile("networking_requests.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1055 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x55, 0xdb, 0x72, 0x1b, 0x35,
	0x18, 0x66, 0xe3, 0xc6, 0xa5, 0x8a, 0x93, 0x28, 0x4a, 0x49, 0xd2, 0x69, 0x29, 0xb4, 0x5c, 0xc0,
	0xc0, 0x90, 0xce, 0xc0, 0x13, 0xc8, 0xab, 0xdf, 0x9b, 0xc5, 0xbb, 0xab, 0x45, 0xd2, 0x3a, 0x98,
	0x1b, 0x0d, 0x05, 0x93, 0x86, 0x4e, 0xe2, 0xd4, 0x76, 0x28, 0xe5, 0x0c, 0x33, 0x9c, 0x8f, 0x3d,
	0x32, 0xc3, 0x15, 0xe7, 0x2b, 0x78, 0x03, 0xb8, 0xe0, 0x9d, 0x78, 0x00, 0x7e, 0x69, 0xed, 0x5d,
	0x77, 0x86, 0xe1, 0x22, 0x93, 0xd5, 0x27, 0xe9, 0xfb, 0x0f, 0xdf, 0xa7, 0xdf, 0xe4, 0xcc, 0xe1,
	0x60, 0x72, 0x7d, 0x38, 0xba, 0xba, 0x7f, 0xb8, 0x67, 0x47, 0x83, 0x6b, 0xc7, 0x83, 0xf1, 0x64,
	0xbc, 0x7d, 0x34, 0x1a, 0x4e, 0x86, 0xec, 0x7c, 0x2e, 0x23, 0x99, 0xbb, 0xcf, 0xf1, 0x76, 0x56,
	0x9d, 0xda, 0x56, 0xd3, 0x53, 0x17, 0x3f, 0x0c, 0xc8, 0xc9, 0xe9, 0x82, 0x65, 0xa4, 0x35, 0xbd,
	0x6d, 0x27, 0x37, 0x8e, 0x06, 0x5b, 0xc1, 0xa3, 0xc1, 0x13, 0x2b, 0xcf, 0x3c, 0xb5, 0xfd, 0xff,
	0x14, 0xb3, 0x0f, 0x83, 0x57, 0xd4, 0xd2, 0xa8, 0x5e, 0xb0, 0xc7, 0xc9, 0xea, 0x8c, 0xef, 0x60,
	0x30, 0x1e, 0xbf, 0xb4, 0x37, 0xd8, 0x5a, 0x40, 0xca, 0x96, 0x5a, 0x99, 0xc2, 0x69, 0x89, 0x3e,
	0xf9, 0x77, 0x8b, 0x2c, 0xcd, 0xb1, 0x30, 0x4a, 0x5a, 0x29, 0x98, 0x1d, 0x29, 0x6c, 0x91, 0x69,
	0x30, 0xf4, 0x01, 0xb6, 0x46, 0x96, 0xf3, 0x84, 0xf7, 0x41, 0xd9, 0x22, 0x17, 0xdc, 0x00, 0x0d,
	0xd8, 0x0a, 0x21, 0x11, 0x18, 0x5b, 0xc2, 0x74, 0xc1, 0x1d, 0x71, 0xeb, 0x38, 0xeb, 0x41, 0x66,
	0xa4, 0xea, 0xd3, 0x13, 0xec, 0x21, 0xb2, 0x26, 0xe4, 0x6e, 0x96, 0x48, 0x2e, 0x2c, 0xf2, 0x98,
	0x38, 0x8b, 0x34, 0x5d, 0x64, 0x67, 0xc9, 0x66, 0x05, 0xc7, 0x06, 0x52, 0x8b, 0x7f, 0x48, 0x63,
	0x40, 0xd3, 0x26, 0xbb, 0x48, 0xce, 0x57, 0x9b, 0x0a, 0x52, 0x69, 0xc0, 0x86, 0x32, 0xeb, 0xc4,
	0x91, 0xed, 0x81, 0xd2, 0xb1, 0xcc, 0xe8, 0x49, 0xb6, 0x4a, 0x96, 0x3a, 0x52, 0x19, 0xe4, 0xe4,
	0x2a, 0xdc, 0xa1, 0x03, 0xb6, 0x4c, 0x4e, 0x41, 0x16, 0xca, 0x22, 0x33, 0x98, 0xca, 0xab, 0x2e,
	0x95, 0x90, 0x9b, 0x70, 0xc7, 0xe6, 0xb2, 0x8b, 0x14, 0x19, 0xdd, 0x73, 0x25, 0xf9, 0x2b, 0x02,
	0x0c, 0x8f, 0x13, 0x4d, 0xaf, 0xb0, 0x16, 0x79, 0xd0, 0x07, 0x2f, 0x34, 0xd0, 0x7d, 0xb6, 0x4e,
	0x56, 0x5d, 0xf6, 0x29, 0xcf, 0xad, 0x6c, 0x3f, 0x07, 0xa1, 0xd1, 0xf4, 0x35, 0xb6, 0x49, 0xd6,
	0xa7, 0x97, 0xf2, 0x44, 0xf6, 0x2b, 0xb6, 0xc3, 0x6a, 0x43, 0x41, 0xc8, 0x93, 0xa4, 0xda, 0x18,
	0x3a, 0x1a, 0x05, 0x09, 0x70, 0x0d, 0x15, 0x78, 0xe4, 0x40, 0x0c, 0x52, 0x96, 0x9a, 0x4b, 0xe3,
	0x6a, 0xb8, 0xc6, 0x4e, 0x13, 0x5a, 0x81, 0x21, 0xcf, 0x4d, 0xa1, 0x80, 0x8e, 0x5c, 0xe6, 0x15,
	0xda, 0x49, 0x00, 0xe8, 0xf8, 0xbe, 0xdb, 0x0a, 0x7a, 0x71, 0x0f, 0xe8, 0xc4, 0x95, 0x63, 0x14,
	0x17, 0x30, 0x6b, 0xc1, 0xb1, 0xeb, 0x49, 0x89, 0xc8, 0x4e, 0x07, 0x9b, 0xf0, 0x3a, 0x63, 0x64,
	0xa5, 0x04, 0x14, 0xe8, 0x5c, 0xa2, 0x8e, 0xf4, 0x7a, 0x7d, 0x0d, 0xb1, 0x22, 0x31, 0xf4, 0x0d,
	0xb6, 0x41, 0x58, 0xad, 0xa2, 0xcd, 0x95, 0xec, 0xc4, 0x09, 0xd0, 0x1b, 0x95, 0x9a, 0x3e, 0x67,
	0x1e, 0x76, 0xe9, 0x9b, 0x0e, 0x6a, 0x17, 0xfd, 0x39, 0xe8, 0x2d, 0xc7, 0xe7, 0xa0, 0x68, 0x86,
	0xbc, 0xed, 0xa2, 0x42, 0x4f, 0x26, 0xbd, 0xba, 0xfe, 0x77, 0x5c, 0xa9, 0x8e, 0x6b, 0xc7, 0x49,
	0x02, 0xc2, 0x42, 0x84, 0x2e, 0x78, 0x97, 0x3d, 0x42, 0xce, 0x56, 0x9a, 0x59, 0x53, 0xa0, 0x65,
	0x62, 0x9e, 0xa0, 0xd6, 0x68, 0x05, 0x40, 0x83, 0xbd, 0x87, 0xee, 0xa1, 0x09, 0xf4, 0x20, 0x41,
	0xcb, 0x61, 0xbe, 0xbb, 0x5c, 0x09, 0x4d, 0xdf, 0x0f, 0xd8, 0x19, 0x72, 0x1a, 0x69, 0xc2, 0xae,
	0xe5, 0x0e, 0x42, 0xbe, 0x36, 0x17, 0x11, 0x5a, 0xe7, 0x83, 0x00, 0x33, 0x6c, 0x55, 0xad, 0x8a,
	0xfa, 0x29, 0xfd, 0x28, 0xc0, 0xd8, 0x5e, 0x57, 0x5c, 0x55, 0xd2, 0x7f, 0x1c, 0x38, 0x6a, 0x6d,
	0xb8, 0x2a, 0xf1, 0x36, 0x37, 0x06, 0x6b, 0xfe, 0x24, 0xc0, 0x1e, 0x12, 0xfc, 0xc6, 0x42, 0xfc,
	0xed, 0x4f, 0x03, 0x74, 0xea, 0x06, 0x4a, 0xdc, 0x0f, 0x13, 0xa8, 0x7d, 0xed, 0xe9, 0xe9, 0x67,
	0x01, 0xdb, 0x22, 0xeb, 0xa1, 0x4c, 0x12, 0xf4, 0x8a, 0x15, 0x48, 0xdc, 0xb7, 0x6d, 0x99, 0x15,
	0x9a, 0x7e, 0x1e, 0x60, 0x53, 0xd7, 0xaa, 0x3c, 0x5e, 0xc8, 0x11, 0x97, 0xda, 0xd0, 0x2f, 0x3c,
	0x5d, 0x85, 0x63, 0x17, 0x90, 0x33, 0x2c, 0x30, 0xba, 0x54, 0xf4, 0xcb, 0x00, 0x7b, 0xb9, 0xe4,
	0x37, 0xb3, 0x10, 0x9c, 0x58, 0x5f, 0xf9, 0x00, 0xe5, 0x8b, 0xf2, 0x48, 0xd5, 0xd0, 0xaf, 0x7d,
	0x80, 0x19, 0x5a, 0xfb, 0xfe, 0x1b, 0x8f, 0x73, 0x21, 0xac, 0xf7, 0x66, 0x2a, 0x45, 0xdc, 0x89,
	0x11, 0xff, 0x36, 0x40, 0x0f, 0xad, 0x88, 0x58, 0x77, 0xe7, 0x0e, 0xdf, 0x0c, 0xd8, 0x05, 0x72,
	0xee, 0xfe, 0xfc, 0x05, 0x74, 0x20, 0x13, 0xa8, 0x46, 0x59, 0xc8, 0x2d, 0xdf, 0xbd, 0x22, 0x8f,
	0xbc, 0x63, 0x66, 0xd1, 0x6f, 0x7b, 0x05, 0xf0, 0x35, 0xdb, 0x0e, 0xef, 0xa1, 0x66, 0xa6, 0xde,
	0xba, 0xe3, 0x1b, 0x9b, 0xc5, 0x61, 0x37, 0xe3, 0x69, 0x0d, 0xdf, 0xf5, 0xb5, 0xc1, 0xf3, 0x45,
	0x9c, 0x97, 0x5a, 0xd1, 0x7b, 0x15, 0x07, 0x3e, 0x6d, 0xec, 0xb7, 0xa9, 0xa7, 0xc3, 0x77, 0x9e,
	0xc3, 0x95, 0xcd, 0xb5, 0x3b, 0x20, 0x62, 0xd4, 0xd6, 0xd0, 0xdf, 0x17, 0x5c, 0x6d, 0x0e, 0xae,
	0x86, 0x43, 0xa1, 0x50, 0xcb, 0x3f, 0x16, 0xd8, 0x39, 0xb2, 0xe9, 0x70, 0x5d, 0x44, 0xee, 0x24,
	0xfa, 0x21, 0x94, 0x02, 0x5c, 0x02, 0x9a, 0xde, 0x6c, 0xb0, 0x87, 0xc9, 0x56, 0xe9, 0x96, 0x19,
	0x6a, 0x79, 0x0f, 0x8b, 0xe5, 0x6d, 0x54, 0xfc, 0x56, 0xc3, 0x35, 0x26, 0x4c, 0x78, 0x9c, 0x56,
	0xdb, 0xf4, 0x76, 0xc3, 0xd9, 0xc0, 0x85, 0xc6, 0x83, 0xe8, 0x11, 0x7a, 0xa7, 0xe1, 0xda, 0xa0,
	0xeb, 0x47, 0x62, 0x80, 0xa7, 0xf4, 0x6e, 0xc3, 0xa9, 0x99, 0x72, 0xd5, 0xfd, 0x0f, 0xef, 0xde,
	0x6b, 0xb8, 0x6c, 0xcb, 0xb1, 0x97, 0xf3, 0xdd, 0x0c, 0x5b, 0x11, 0x67, 0x38, 0x51, 0xfe, 0x69,
	0xb0, 0x53, 0xe4, 0x04, 0x84, 0x3b, 0x92, 0x7e, 0xef, 0xc6, 0xe0, 0x86, 0x80, 0x76, 0x11, 0x4d,
	0x47, 0xea, 0xdc, 0xe4, 0xfc, 0x73, 0xd1, 0x69, 0x5f, 0x6e, 0x0a, 0x70, 0x94, 0xb3, 0x31, 0xfb,
	0xd7, 0x22, 0xce, 0x1e, 0xa6, 0x3b, 0xb1, 0xe0, 0xf8, 0x26, 0xa2, 0x58, 0xe3, 0x73, 0xf6, 0x03,
	0xe5, 0x87, 0xa6, 0x37, 0xb5, 0xdf, 0xc0, 0x86, 0x22, 0x64, 0x13, 0x19, 0xd1, 0x1f, 0x9b, 0x8e,
	0xa9, 0x84, 0x43, 0x50, 0x06, 0x1d, 0x11, 0x96, 0x17, 0x7e, 0x6a, 0xba, 0xe7, 0x52, 0xee, 0x4c,
	0x67, 0xfa, 0xcf, 0x73, 0x50, 0xc9, 0x41, 0x7f, 0x99, 0x83, 0xb0, 0xf3, 0x1a, 0x53, 0xf8, 0xb5,
	0x89, 0x8f, 0x7c, 0x79, 0x4a, 0x39, 0x1d, 0x5c, 0xbf, 0x35, 0xdb, 0x8f, 0xbd, 0x78, 0x61, 0x6f,
	0x7f, 0x72, 0xe5, 0xf8, 0xf2, 0xf6, 0xcb, 0xc3, 0x83, 0x4b, 0x47, 0x57, 0x0f, 0x0e, 0xf7, 0x86,
	0x4f, 0x0f, 0x5f, 0xd9, 0xbf, 0x74, 0x34, 0xc4, 0x0f, 0xff, 0x63, 0x38, 0xbe, 0xdc, 0xf4, 0xff,
	0x9f, 0xfd, 0x37, 0x00, 0x00, 0xff, 0xff, 0xb2, 0x76, 0xe5, 0xa6, 0x31, 0x07, 0x00, 0x00,
}
